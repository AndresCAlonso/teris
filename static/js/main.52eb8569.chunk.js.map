{"version":3,"sources":["utils/settings.js","utils/movements.js","context/store.js","components/GameBoard.js","components/GameInfoPanel.js","components/GameLayout.js","App.js","serviceWorker.js","index.js"],"names":["boardSettings","pieces","SQUARE","color","type","initialPlacement","a","b","c","d","orientation","rotation","coordinates","RIGHT_L","rb","cb","ra","ca","LEFT_L","rc","cc","LINE","Z","REV_Z","T","row","column","BLANK","invalidMove","board","moveCoordinates","allPieceCoordinates","some","r","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","match","event","code","downHandler","debounce","upHandler","useEffect","window","addEventListener","removeEventListener","movePiece","setBoard","activePiece","setActivePiece","lastKeypress","setLastKeypress","isDropping","direction","currentPiece","pieceCoordinates","currentPosition","initialPosition","addToColumn","nextPosition","Object","fromEntries","entries","map","key","values","Date","now","nextBoard","produce","newBoard","forEach","afterMoving","clearLines","allRows","i","every","cellValue","push","length","rowsToDelete","startingRow","currentRowIndex","currentRow","columnIndex","generateRandomPiece","pieceType","Math","floor","random","keys","initialState","score","nextPiece","isPaused","StoreContext","createContext","reducer","state","payload","StoreProvider","props","useReducer","value","dispatch","Provider","children","Cell","Consumer","stylesToUse","cellStyles","border","backgroundColor","style","GameBoard","Array","fill","setIsDropping","useContext","setNextPiece","addToScore","toAdd","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","movePieceDown","needNewPiece","nextActive","linesDeleted","stepState","getNextDropPosition","newActivePiece","dropPiece","nextOrientation","rotatePiece","className","margin","display","gridTemplateColumns","gridTemplateRows","width","height","filter","_","rowIndex","cellVal","cellIndex","previewSettings","previewGridStyles","emptyGrid","PreviewGrid","piece","coords","previewInfo","previewGrid","interimStyles","GameInfoPanel","onClick","padding","textAlign","textDecoration","fontSize","layoutStyles","justifyContent","GameLayout","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52eb8569.chunk.js","sourcesContent":["const boardSettings = {\n  cellWidth: 30,\n  cellHeight: 30,\n  columns: 10,\n  rows: 24,\n  displayedRows: 20,\n}\n\nconst pieces = {\n  SQUARE: {\n    color: '#F0F000',\n    type: 'SQUARE',\n    initialPlacement: {\n      a: [-1, 4],\n      b: [-1, 5],\n      c: [0, 4],\n      d: [0, 5],\n    },\n    orientation: 'UP',\n    rotation: (coordinates, orientation) => [coordinates, orientation],\n  },\n  RIGHT_L: {\n    color: '#EF9F00',\n    type: 'RIGHT_L',\n    initialPlacement: {\n      a: [-1, 6],\n      b: [0, 4],\n      c: [0, 5],\n      d: [0, 6],\n    },\n    orientation: 'UP',\n    rotation: (coordinates, orientation) => {\n      if (orientation === 'UP') {\n        const { a, b, c, d } = coordinates\n        const [rb, cb] = b\n        const [rc, cc] = c\n        return [{ a, b: [rb - 1, cb + 1], c: [rc + 1, cc + 1], d }, 'LEFT']\n      } else if (orientation === 'LEFT') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rb, cb] = b\n        const [rc, cc] = c\n        return [\n          { a: [ra + 1, ca - 1], b: [rb + 2, cb], c: [rc - 1, cc + 1], d },\n          'DOWN',\n        ]\n      } else if (orientation === 'DOWN') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rb, cb] = b\n        const [rc, cc] = c\n        return [\n          { a: [ra + 1, ca + 1], b: [rb, cb + 2], c: [rc - 1, cc - 1], d },\n          'RIGHT',\n        ]\n      } else if (orientation === 'RIGHT') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rb, cb] = b\n        const [rc, cc] = c\n        return [\n          { a: [ra - 2, ca], b: [rb - 1, cb - 3], c: [rc + 1, cc - 1], d },\n          'UP',\n        ]\n      } else {\n        return [coordinates, orientation]\n      }\n    },\n  },\n  LEFT_L: {\n    color: '#0000F0',\n    type: 'LEFT_L',\n    initialPlacement: {\n      a: [-1, 4],\n      b: [0, 4],\n      c: [0, 5],\n      d: [0, 6],\n    },\n    orientation: 'UP',\n    rotation: (coordinates, orientation) => {\n      if (orientation === 'UP') {\n        const { a, b, c, d } = coordinates\n        const [rc, cc] = c\n        const [rd, cd] = d\n        return [{ a, b, c: [rc, cc - 2], d: [rd - 2, cd - 2] }, 'LEFT']\n      } else if (orientation === 'LEFT') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rc, cc] = c\n        const [rd, cd] = d\n        return [\n          { a: [ra + 1, ca - 1], b, c: [rc + 1, cc + 1], d: [rd + 2, cd - 2] },\n          'DOWN',\n        ]\n      } else if (orientation === 'DOWN') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rc, cc] = c\n        const [rd, cd] = d\n        return [\n          { a: [ra + 1, ca + 1], b, c: [rc - 1, cc + 1], d: [rd + 2, cd + 2] },\n          'RIGHT',\n        ]\n      } else if (orientation === 'RIGHT') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rd, cd] = d\n        return [{ a: [ra - 2, ca], b, c, d: [rd - 2, cd + 2] }, 'UP']\n      } else {\n        return [coordinates, orientation]\n      }\n    },\n  },\n  LINE: {\n    color: '#00F0F0',\n    type: 'LINE',\n    initialPlacement: {\n      a: [-1, 4],\n      b: [-1, 5],\n      c: [-1, 6],\n      d: [-1, 7],\n    },\n    orientation: 'HORIZONTAL',\n    rotation: (coordinates, orientation) => {\n      if (orientation === 'VERTICAL') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rc, cc] = c\n        const [rd, cd] = d\n        return [\n          { a: [ra + 1, ca - 1], b, c: [rc - 1, cc + 1], d: [rd - 2, cd + 2] },\n          'HORIZONTAL',\n        ]\n      } else if (orientation === 'HORIZONTAL') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rc, cc] = c\n        const [rd, cd] = d\n        return [\n          { a: [ra - 1, ca + 1], b, c: [rc + 1, cc - 1], d: [rd + 2, cd - 2] },\n          'VERTICAL',\n        ]\n      } else {\n        return [coordinates, orientation]\n      }\n    },\n  },\n  Z: {\n    color: '#007800',\n    type: 'Z',\n    initialPlacement: {\n      a: [-1, 5],\n      b: [-1, 6],\n      c: [0, 4],\n      d: [0, 5],\n    },\n    orientation: 'HORIZONTAL',\n    rotation: (coordinates, orientation) => {\n      if (orientation === 'HORIZONTAL') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rb, cb] = b\n        const [rc, cc] = c\n        return [\n          { a: [ra + 1, ca - 1], b: [rb, cb - 2], c: [rc + 1, cc + 1], d },\n          'VERTICAL',\n        ]\n      } else if (orientation === 'VERTICAL') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rb, cb] = b\n        const [rc, cc] = c\n        return [\n          { a: [ra - 1, ca + 1], b: [rb, cb + 2], c: [rc - 1, cc - 1], d },\n          'HORIZONTAL',\n        ]\n      } else {\n        return [coordinates, orientation]\n      }\n    },\n  },\n  REV_Z: {\n    color: '#780000',\n    type: 'REV_Z',\n    initialPlacement: {\n      a: [-1, 4],\n      b: [-1, 5],\n      c: [0, 5],\n      d: [0, 6],\n    },\n    orientation: 'HORIZONTAL',\n    rotation: (coordinates, orientation) => {\n      if (orientation === 'HORIZONTAL') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rb, cb] = b\n        const [rd, cd] = d\n        return [\n          { a: [ra + 2, ca], b: [rb + 1, cb - 1], c, d: [rd - 1, cd - 1] },\n          'VERTICAL',\n        ]\n      } else if (orientation === 'VERTICAL') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rb, cb] = b\n        const [rd, cd] = d\n        return [\n          { a: [ra - 2, ca], b: [rb - 1, cb + 1], c, d: [rd + 1, cd + 1] },\n          'HORIZONTAL',\n        ]\n      } else {\n        return [coordinates, orientation]\n      }\n    },\n  },\n  T: {\n    color: '#A000F0',\n    type: 'T',\n    initialPlacement: {\n      a: [-1, 5],\n      b: [0, 4],\n      c: [0, 5],\n      d: [0, 6],\n    },\n    orientation: 'UP',\n    rotation: (coordinates, orientation) => {\n      if (orientation === 'UP') {\n        const [row, column] = coordinates.d\n        return [{ ...coordinates, d: [row + 1, column - 1] }, 'LEFT']\n      } else if (orientation === 'LEFT') {\n        const [row, column] = coordinates.a\n        return [{ ...coordinates, a: [row + 1, column + 1] }, 'DOWN']\n      } else if (orientation === 'DOWN') {\n        const [row, column] = coordinates.b\n        return [{ ...coordinates, b: [row - 1, column + 1] }, 'RIGHT']\n      } else if (orientation === 'RIGHT') {\n        const { a, b, c, d } = coordinates\n        const [ra, ca] = a\n        const [rb, cb] = b\n        const [rd, cd] = d\n        return [\n          {\n            a: [ra - 1, ca - 1],\n            b: [rb + 1, cb - 1],\n            c,\n            d: [rd - 1, cd + 1],\n          },\n          'UP',\n        ]\n      }\n    },\n  },\n}\n\nconst BLANK = { color: 'transparent' }\n\nexport { boardSettings, pieces, BLANK }\n","import { useState, useEffect } from 'react'\nimport { boardSettings, pieces, BLANK } from './settings'\nimport produce from 'immer'\nimport debounce from 'lodash/debounce'\n\nconst invalidMove = ({ board, moveCoordinates, allPieceCoordinates }) => {\n  const [row, column] = moveCoordinates\n  if (\n    row < 0 ||\n    row >= boardSettings.rows ||\n    column < 0 ||\n    column >= boardSettings.columns\n  )\n    return true\n\n  if (\n    board[row][column] !== BLANK &&\n    !allPieceCoordinates.some(([r, c]) => row === r && column === c)\n  )\n    return true\n\n  return false\n}\n\nconst useKeyPress = targetKey => {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false)\n  const match = event => targetKey === event.code\n\n  // If pressed key is our target key then set to true\n  const downHandler = debounce(event => {\n    // console.log(event.code)\n    if (match(event)) {\n      setKeyPressed(true)\n    }\n  })\n\n  // If released key is our target key then set to false\n  const upHandler = debounce(event => {\n    if (match(event)) {\n      setKeyPressed(false)\n    }\n  })\n\n  // Add event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, []) // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed\n}\n\nconst movePiece = ({\n  board,\n  setBoard,\n  activePiece,\n  setActivePiece,\n  lastKeypress,\n  setLastKeypress,\n  isDropping,\n  direction,\n}) => {\n  let currentPiece = activePiece\n  let pieceCoordinates =\n    currentPiece.currentPosition || currentPiece.initialPosition\n\n  const addToColumn = direction === 'left' ? -1 : 1\n\n  if (!pieceCoordinates) return\n\n  const nextPosition = Object.fromEntries(\n    Object.entries(pieceCoordinates).map(([key, [row, column]]) => [\n      key,\n      [row, column + addToColumn],\n    ]),\n  )\n\n  if (\n    !isDropping &&\n    !Object.values(nextPosition).some(moveCoordinates =>\n      invalidMove({\n        board,\n        moveCoordinates,\n        allPieceCoordinates: Object.values(pieceCoordinates),\n      }),\n    ) &&\n    Date.now() - lastKeypress >= 100\n  ) {\n    setLastKeypress(Date.now())\n    const nextBoard = produce(board, newBoard => {\n      // The piece can move down so clear it's current spaces\n      Object.values(pieceCoordinates).forEach(([row, column]) => {\n        if (row >= 0) {\n          newBoard[row][column] = BLANK\n        }\n      })\n\n      Object.values(nextPosition).forEach(([row, column]) => {\n        newBoard[row][column] = currentPiece\n      })\n    })\n\n    const nextActive = produce(currentPiece, afterMoving => {\n      afterMoving.currentPosition = nextPosition\n    })\n\n    setActivePiece(nextActive)\n    setBoard(nextBoard)\n  }\n}\n\nconst clearLines = board => {\n  const firstVisibleRow = boardSettings.rows - boardSettings.displayedRows\n  let allRows = []\n\n  for (let i = firstVisibleRow; i < boardSettings.rows; i++) {\n    const row = board[i]\n    if (row.every(cellValue => cellValue !== BLANK)) {\n      allRows.push(i)\n    }\n\n    if (allRows.length === 4) break\n  }\n\n  if (allRows.length > 0) {\n    const rowsToDelete = allRows.length\n    const startingRow = allRows[0] - 1\n\n    let currentRowIndex = startingRow\n    let currentRow = board[startingRow]\n\n    const nextBoard = produce(board, newBoard => {\n      while (!currentRow.every(cellValue => cellValue === BLANK)) {\n        currentRow.forEach((cellValue, columnIndex) => {\n          newBoard[currentRowIndex][columnIndex] = BLANK\n          newBoard[currentRowIndex + rowsToDelete][columnIndex] = cellValue\n        })\n        --currentRowIndex\n        currentRow = board[currentRowIndex]\n      }\n    })\n\n    return [nextBoard, rowsToDelete]\n  }\n\n  return [board, 0]\n}\n\nconst dropPiece = ({\n  board,\n  setBoard,\n  activePiece,\n  setActivePiece,\n  lastKeypress,\n  setLastKeypress,\n  nextPiece,\n  setNextPiece,\n  addToScore,\n}) => {\n  let currentPiece = activePiece\n  let pieceCoordinates =\n    currentPiece.currentPosition || currentPiece.initialPlacement\n\n  const getNextDropPosition = pieceCoordinates =>\n    Object.fromEntries(\n      Object.entries(pieceCoordinates).map(([key, [row, column]]) => [\n        key,\n        [row + 1, column],\n      ]),\n    )\n\n  let currentPosition = pieceCoordinates\n  let nextPosition = getNextDropPosition(pieceCoordinates)\n\n  if (Date.now() - lastKeypress < 150) {\n    return\n  }\n\n  setLastKeypress(Date.now())\n\n  while (\n    !Object.values(nextPosition).some(moveCoordinates =>\n      invalidMove({\n        board,\n        moveCoordinates,\n        allPieceCoordinates: Object.values(pieceCoordinates),\n      }),\n    )\n  ) {\n    currentPosition = nextPosition\n    nextPosition = getNextDropPosition(nextPosition)\n  }\n\n  const newActivePiece = nextPiece\n\n  const nextBoard = produce(board, newBoard => {\n    // The piece can move down so clear it's current spaces\n    Object.values(pieceCoordinates).forEach(([row, column]) => {\n      if (row >= 0) {\n        newBoard[row][column] = BLANK\n      }\n    })\n\n    Object.values(currentPosition).forEach(([row, column]) => {\n      if (row >= 0) {\n        newBoard[row][column] = currentPiece\n      }\n    })\n\n    Object.values(newActivePiece.initialPlacement).forEach(([row, column]) => {\n      if (row >= 0) {\n        newBoard[row][column] = newActivePiece\n      }\n    })\n  })\n\n  const [newBoard, linesDeleted] = clearLines(nextBoard)\n\n  setActivePiece(newActivePiece)\n  setNextPiece(generateRandomPiece())\n  setBoard(newBoard)\n  if (linesDeleted > 0) {\n    addToScore(5 * 10 ** linesDeleted)\n  }\n}\n\nconst rotatePiece = ({\n  board,\n  setBoard,\n  activePiece,\n  setActivePiece,\n  lastKeypress,\n  setLastKeypress,\n  isDropping,\n}) => {\n  let currentPiece = activePiece\n  let pieceCoordinates =\n    currentPiece.currentPosition || currentPiece.initialPosition\n\n  let [nextPosition, nextOrientation] = currentPiece.rotation(\n    pieceCoordinates,\n    currentPiece.orientation,\n  )\n\n  if (\n    !isDropping &&\n    !Object.values(nextPosition).some(moveCoordinates =>\n      invalidMove({\n        board,\n        moveCoordinates,\n        allPieceCoordinates: Object.values(pieceCoordinates),\n      }),\n    ) &&\n    Date.now() - lastKeypress >= 100\n  ) {\n    setLastKeypress(Date.now())\n    const nextBoard = produce(board, newBoard => {\n      // The piece can move down so clear it's current spaces\n      Object.values(pieceCoordinates).forEach(([row, column]) => {\n        if (row >= 0) {\n          newBoard[row][column] = BLANK\n        }\n      })\n\n      Object.values(nextPosition).forEach(([row, column]) => {\n        newBoard[row][column] = currentPiece\n      })\n    })\n\n    const nextActive = produce(currentPiece, afterMoving => {\n      afterMoving.currentPosition = nextPosition\n      afterMoving.orientation = nextOrientation\n    })\n\n    setActivePiece(nextActive)\n    setBoard(nextBoard)\n  }\n}\n\nconst generateRandomPiece = () => {\n  const pieceType = Math.floor(Math.random() * Math.floor(7))\n  return pieces[Object.keys(pieces)[pieceType]]\n}\n\nexport {\n  clearLines,\n  useKeyPress,\n  invalidMove,\n  dropPiece,\n  boardSettings,\n  generateRandomPiece,\n  movePiece,\n  rotatePiece,\n}\n","import React, { createContext, useReducer } from 'react'\nimport { generateRandomPiece } from '../utils/movements'\n\nconst initialState = {\n  score: 0,\n  nextPiece: generateRandomPiece(),\n  isPaused: true\n}\n\nlet StoreContext = createContext()\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'RESET':\n      return initialState\n    case 'ADD_TO_SCORE':\n      return { ...state, score: state.score + payload }\n    case 'SET_NEXT_PIECE':\n      return { ...state, nextPiece: generateRandomPiece() }\n    case 'TOGGLE_PAUSE':\n      return { ...state, isPaused: !state.isPaused }\n    default:\n      return state\n  }\n}\n\nconst StoreProvider = props => {\n  let [state, dispatch] = useReducer(reducer, initialState)\n  let value = { state, dispatch }\n\n  return (\n    <StoreContext.Provider value={value}>\n      {props.children}\n    </StoreContext.Provider>\n  )\n}\n\nconst StoreConsumer = StoreContext.Consumer\n\nexport { StoreContext, StoreProvider, StoreConsumer }\n","import React, { useState, useEffect, useRef, useContext } from 'react'\nimport produce from 'immer'\nimport {\n  clearLines,\n  dropPiece,\n  invalidMove,\n  generateRandomPiece,\n  movePiece,\n  useKeyPress,\n  rotatePiece\n} from '../utils/movements'\nimport { StoreContext } from '../context/store'\nimport { boardSettings, BLANK } from '../utils/settings'\n\nconst initializeBoard = () => {\n  const rows = 24\n  const columns = 10\n\n  return Array(rows).fill(Array(columns).fill(BLANK))\n}\n\nconst Cell = ({ cellValue, row, column, cellStyles }) => {\n  const stylesToUse = cellStyles || {\n    border: '1px solid gray',\n    backgroundColor: cellValue.color\n  }\n\n  return <div style={stylesToUse}></div>\n}\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay])\n}\n\nconst stepState = ({\n  isPaused,\n  board,\n  setBoard,\n  activePiece,\n  setActivePiece,\n  nextPiece,\n  setNextPiece,\n  setIsDropping,\n  addToScore\n}) => {\n  if (isPaused) return\n\n  setIsDropping(true)\n  let currentPiece = activePiece\n\n  const movePieceDown = pieceCoordinates => {\n    return Object.fromEntries(\n      Object.entries(pieceCoordinates).map(([key, value]) => {\n        const [row, column] = value\n        return [key, [row + 1, column]]\n      })\n    )\n  }\n\n  const pieceCoordinates =\n    currentPiece.currentPosition || currentPiece.initialPlacement\n\n  let nextPosition = movePieceDown(pieceCoordinates)\n\n  const needNewPiece = Object.values(nextPosition).some(moveCoordinates =>\n    invalidMove({\n      board,\n      moveCoordinates,\n      allPieceCoordinates: Object.values(pieceCoordinates)\n    })\n  )\n\n  if (needNewPiece) {\n    currentPiece = nextPiece\n    setNextPiece()\n    nextPosition = movePieceDown(currentPiece.initialPlacement)\n  }\n\n  const nextBoard = produce(board, newBoard => {\n    if (!needNewPiece) {\n      Object.values(pieceCoordinates).forEach(([row, column]) => {\n        if (row >= 0) newBoard[row][column] = BLANK\n      })\n    }\n\n    Object.values(nextPosition).forEach(([row, column]) => {\n      newBoard[row][column] = currentPiece\n    })\n  })\n\n  const nextActive = produce(currentPiece, afterMoving => {\n    afterMoving.currentPosition = nextPosition\n  })\n\n  if (needNewPiece) {\n    const [newBoard, linesDeleted] = clearLines(nextBoard)\n    setBoard(newBoard)\n    addToScore(5 * 10 ** linesDeleted)\n  } else {\n    setBoard(nextBoard)\n  }\n\n  setActivePiece(nextActive)\n  setIsDropping(false)\n}\n\nconst GameBoard = () => {\n  const [board, setBoard] = useState(initializeBoard())\n  const [activePiece, setActivePiece] = useState(generateRandomPiece())\n  const [lastKeypress, setLastKeypress] = useState(0)\n  const [isDropping, setIsDropping] = useState(false)\n\n  const { state, dispatch } = useContext(StoreContext)\n  const { nextPiece, isPaused } = state\n  const setNextPiece = () => dispatch({ type: 'SET_NEXT_PIECE' })\n  const addToScore = toAdd => dispatch({ type: 'ADD_TO_SCORE', payload: toAdd })\n\n  useInterval(() => {\n    stepState({\n      isPaused,\n      board,\n      setBoard,\n      activePiece,\n      setActivePiece,\n      setIsDropping,\n      nextPiece,\n      setNextPiece,\n      addToScore\n    })\n  }, 450)\n\n  if (useKeyPress('ArrowRight')) {\n    movePiece({\n      board,\n      setBoard,\n      activePiece,\n      setActivePiece,\n      lastKeypress,\n      setLastKeypress,\n      isDropping,\n      direction: 'right'\n    })\n  }\n\n  if (useKeyPress('Space')) {\n    dropPiece({\n      board,\n      setBoard,\n      activePiece,\n      setActivePiece,\n      lastKeypress,\n      setLastKeypress,\n      nextPiece,\n      setNextPiece,\n      addToScore\n    })\n  }\n\n  if (useKeyPress('ArrowUp')) {\n    rotatePiece({\n      board,\n      setBoard,\n      activePiece,\n      setActivePiece,\n      lastKeypress,\n      setLastKeypress,\n      isDropping\n    })\n  }\n\n  if (useKeyPress('ArrowLeft')) {\n    movePiece({\n      board,\n      setBoard,\n      activePiece,\n      setActivePiece,\n      lastKeypress,\n      setLastKeypress,\n      isDropping,\n      direction: 'left'\n    })\n  }\n\n  return (\n    <div\n      className=\"gameboard\"\n      style={{\n        margin: '1em',\n        display: 'grid',\n        gridTemplateColumns: `repeat(${boardSettings.columns}, 1fr)`,\n        gridTemplateRows: `repeat(${boardSettings.displayedRows}, 1fr)`,\n        width: `${boardSettings.columns * boardSettings.cellWidth}px`,\n        height: `${boardSettings.displayedRows * boardSettings.cellHeight}px`,\n        border: '1px solid gray'\n      }}\n    >\n      {board\n        .filter(\n          (_, rowIndex) =>\n            rowIndex >= boardSettings.rows - boardSettings.displayedRows\n        )\n        .map((row, rowIndex) => {\n          return row.map((cellVal, cellIndex) => (\n            <Cell\n              key={`board_${rowIndex}_${cellIndex}`}\n              cellValue={cellVal}\n              row={rowIndex}\n              column={cellIndex}\n            />\n          ))\n        })}\n    </div>\n  )\n}\n\nexport { GameBoard, Cell }\n","import React, { useContext } from 'react'\nimport { StoreContext } from '../context/store'\nimport { pieces, BLANK } from '../utils/settings'\nimport { Cell } from './GameBoard'\nimport { produce } from 'immer'\n\nconst previewSettings = {\n  columns: 7,\n  rows: 6,\n  cellWidth: 15,\n  cellHeight: 15\n}\n\nconst cellStyles = cellValue => ({\n  backgroundColor: cellValue.color\n})\n\nconst previewGridStyles = {\n  margin: '1em',\n  display: 'grid',\n  gridTemplateColumns: `repeat(${previewSettings.columns}, 1fr)`,\n  gridTemplateRows: `repeat(${previewSettings.rows}, 1fr)`,\n  width: `${previewSettings.columns * previewSettings.cellWidth}px`,\n  height: `${previewSettings.rows * previewSettings.cellHeight}px`,\n  border: '1px solid gray'\n}\n\nconst emptyGrid = new Array(previewSettings.rows).fill(\n  new Array(previewSettings.columns).fill(BLANK)\n)\n\nconst PreviewGrid = ({ piece }) => {\n  const coords = previewInfo[piece.type]\n  const previewGrid = produce(emptyGrid, previewGrid => {\n    coords.forEach(([row, column]) => {\n      previewGrid[row][column] = piece\n    })\n  })\n\n  const stylesToUse = cellValue => {\n    let interimStyles = cellStyles(cellValue)\n\n    if (cellValue !== BLANK) {\n      interimStyles = { ...interimStyles, border: '1px solid gray' }\n    }\n\n    return interimStyles\n  }\n\n  return (\n    <div style={previewGridStyles}>\n      {previewGrid.map((row, rowIndex) => {\n        return row.map((cellVal, cellIndex) => {\n          return (\n            <Cell\n              key={`preview_${rowIndex}_${cellIndex}`}\n              cellStyles={stylesToUse(cellVal)}\n              cellValue={cellVal}\n              row={rowIndex}\n              column={cellIndex}\n            />\n          )\n        })\n      })}\n    </div>\n  )\n}\nconst GameInfoPanel = () => {\n  const { state, dispatch } = useContext(StoreContext)\n  const { score, nextPiece, isPaused } = state\n  const togglePause = () => dispatch({ type: 'TOGGLE_PAUSE' })\n\n  return (\n    <div>\n      <PreviewGrid piece={nextPiece} />\n      <div>{score}</div>\n      <div style={{ margin: '1em' }}>\n        <button\n          onClick={() => togglePause()}\n          style={{\n            backgroundColor: '#4CAF50' /* Green */,\n            border: 'none',\n            color: 'white',\n            padding: '15px 32px',\n            textAlign: 'center',\n            textDecoration: 'none',\n            display: 'inline-block',\n            fontSize: '16px'\n          }}\n        >\n          {isPaused ? 'START' : 'PAUSE'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nconst previewInfo = {\n  T: [\n    [2, 3],\n    [3, 2],\n    [3, 3],\n    [3, 4]\n  ],\n  Z: [\n    [2, 3],\n    [2, 4],\n    [3, 2],\n    [3, 3]\n  ],\n  LEFT_L: [\n    [2, 2],\n    [3, 2],\n    [3, 3],\n    [3, 4]\n  ],\n  RIGHT_L: [\n    [2, 4],\n    [3, 2],\n    [3, 3],\n    [3, 4]\n  ],\n  LINE: [\n    [2, 2],\n    [2, 3],\n    [2, 4],\n    [2, 5]\n  ],\n  REV_Z: [\n    [1, 1],\n    [1, 2],\n    [2, 2],\n    [2, 3]\n  ],\n  SQUARE: [\n    [2, 3],\n    [2, 2],\n    [3, 3],\n    [3, 2]\n  ]\n}\n\nexport default GameInfoPanel\n","import React from 'react'\nimport { GameBoard } from './GameBoard'\nimport GameInfoPanel from './GameInfoPanel'\nimport { StoreProvider } from '../context/store'\n\nconst layoutStyles = {\n  width: '500px',\n  margin: '0 auto',\n  display: 'grid',\n  gridTemplateColumns: '4fr 2fr',\n  gridTemplateRows: 'auto',\n  justifyContent: 'space-around'\n}\n\nconst GameLayout = () => {\n  return (\n    <StoreProvider>\n      <div className=\"gameLayout\" style={layoutStyles}>\n        <GameBoard />\n        <GameInfoPanel />\n      </div>\n    </StoreProvider>\n  )\n}\n\nexport default GameLayout\n","import React from 'react'\nimport GameLayout from './components/GameLayout'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GameLayout />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}